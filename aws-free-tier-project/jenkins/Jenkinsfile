@Library('jenkins-shared-library-demo') _

pipeline {
    agent any

    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Terraform action (apply/destroy)')
    }

    options {
        timeout(time: 20, unit: 'MINUTES') // Whole pipeline timeout
    }

    stages {
        stage('Terraform Multi-Environment Deploy') {
            parallel {
                stage('Dev Environment') {
                    steps {
                        script {
                            echo "üöÄ Starting Terraform for DEV..."
                            terraformPipeline(
                                env: 'dev',
                                action: params.ACTION,
                                credId: 'aws-ecr-creds',
                                dir: "aws-free-tier-project/terraform/dev",
                                tfvars: "dev.tfvars"
                            )
                        }
                    }
                }

                stage('Prod Environment') {
                    steps {
                        script {
                            echo "üöÄ Starting Terraform for PROD..."
                            terraformPipeline(
                                env: 'prod',
                                action: params.ACTION,
                                credId: 'aws-ecr-creds',
                                dir: "aws-free-tier-project/terraform/prod",
                                tfvars: "prod.tfvars"
                            )
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            echo "üßπ Cleaning workspace..."
            cleanWs()
        }
        failure {
            echo "‚ùå Pipeline failed!"
        }
        success {
            echo "‚úÖ All environments deployed successfully!"
        }
    }
}
