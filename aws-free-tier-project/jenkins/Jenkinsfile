pipeline {
    agent any

    parameters {
        choice(name: 'TARGET_ENV', choices: ['dev', 'prod'], description: 'Select the environment to deploy')
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Choose Terraform action to run')
    }

    environment {
        AWS_REGION = "ap-south-1"
    }

    stages {
        stage('Terraform Init & Validate') {
            steps {
                script {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-creds']]) {
                        def tfDir = "aws-free-tier-project/terraform/${params.TARGET_ENV}"
                        def tfVars = "${params.TARGET_ENV}.tfvars"

                        dir(tfDir) {
                            echo "üîß Initializing Terraform for ${params.TARGET_ENV}"
                            bat "terraform init -reconfigure"
                            bat "terraform validate"
                        }
                    }
                }
            }
        }

        stage('Terraform Apply') {
            when {
                expression { params.ACTION == 'apply' }
            }
            steps {
                script {
                    def tfDir = "aws-free-tier-project/terraform/${params.TARGET_ENV}"
                    def tfVars = "${params.TARGET_ENV}.tfvars"

                    dir(tfDir) {
                        bat "terraform plan -var-file=${tfVars}"

                        // ‚úÖ Manual input for both dev and prod
                        input message: "üü¢ Approve apply for ${params.TARGET_ENV}?", ok: "Apply"

                        bat "terraform apply -auto-approve -var-file=${tfVars}"
                        echo "‚úÖ Apply completed for ${params.TARGET_ENV}"
                    }
                }
            }
        }

        stage('Terraform Destroy') {
            when {
                expression { params.ACTION == 'destroy' }
            }
            steps {
                script {
                    def tfDir = "aws-free-tier-project/terraform/${params.TARGET_ENV}"
                    def tfVars = "${params.TARGET_ENV}.tfvars"

                    dir(tfDir) {
                        bat "terraform plan -destroy -var-file=${tfVars}"

                        // ‚úÖ Manual input for both dev and prod
                        input message: "‚ö†Ô∏è Approve destroy for ${params.TARGET_ENV}?", ok: "Destroy"

                        bat "terraform destroy -auto-approve -var-file=${tfVars}"
                        echo "üí• Destroy completed for ${params.TARGET_ENV}"
                    }
                }
            }
        }
    }
}
